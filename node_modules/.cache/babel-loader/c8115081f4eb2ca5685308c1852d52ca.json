{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport styles from './style.module.css';\nexport default function Ellipsis(_a) {\n  var _b = _a.color,\n      color = _b === void 0 ? '#7f58af' : _b,\n      _c = _a.size,\n      size = _c === void 0 ? 80 : _c,\n      className = _a.className,\n      style = _a.style,\n      rest = __rest(_a, [\"color\", \"size\", \"className\", \"style\"]);\n\n  var circles = __spreadArray([], Array(4)).map(function (_, index) {\n    return _jsx(\"div\", {\n      style: {\n        background: \"\" + color\n      }\n    }, index);\n  });\n\n  return _jsx(\"div\", __assign({\n    className: classNames(styles['lds-ellipsis'], className),\n    style: __assign(__assign({}, style), {\n      width: size,\n      height: size\n    })\n  }, rest, {\n    children: circles\n  }), void 0);\n}","map":{"version":3,"sources":["../../../src/components/Ellipsis/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,MAAP,MAAmB,oBAAnB;AAGA,eAAc,SAAU,QAAV,CAAmB,EAAnB,EAAqF;AAAhE,MAAA,EAAA,GAAA,EAAA,CAAA,KAAA;AAAA,MAAA,KAAK,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,SAAH,GAAY,EAAjB;AAAA,MAAmB,EAAA,GAAA,EAAA,CAAA,IAAnB;AAAA,MAAmB,IAAI,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,EAAH,GAAK,EAA5B;AAAA,MAA8B,SAAS,GAAA,EAAA,CAAA,SAAvC;AAAA,MAAyC,KAAK,GAAA,EAAA,CAAA,KAA9C;AAAA,MAAmD,IAAI,GAAA,MAAA,CAAA,EAAA,EAAzD,CAAA,OAAA,EAAA,MAAA,EAAA,WAAA,EAAA,OAAA,CAAyD,CAAvD;;AACjC,MAAM,OAAO,GAAG,aAAA,CAAA,EAAA,EAAI,KAAK,CAAC,CAAD,CAAT,CAAA,CAAc,GAAd,CAAkB,UAAC,CAAD,EAAI,KAAJ,EAAS;AAAK,WAAA,IAAA,CAAA,KAAA,EAAA;AAAiB,MAAA,KAAK,EAAE;AAAE,QAAA,UAAU,EAAE,KAAG;AAAjB;AAAxB,KAAA,EAAA,KAAA,CAAA;AAAsD,GAAtF,CAAhB;;AAEA,SACE,IAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AACE,IAAA,SAAS,EAAE,UAAU,CAAC,MAAM,CAAC,cAAD,CAAP,EAAyB,SAAzB,CADvB;AAEE,IAAA,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAAO,KAAP,CAAA,EAAY;AAAE,MAAA,KAAK,EAAE,IAAT;AAAe,MAAA,MAAM,EAAE;AAAvB,KAAZ;AAFP,GAAA,EAGM,IAHN,EAGU;AAAA,IAAA,QAAA,EAEP;AAFO,GAHV,CAAA,EAKU,KAAA,CALV,CADF;AASD","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport styles from './style.module.css';\nexport default function Ellipsis(_a) {\n    var _b = _a.color, color = _b === void 0 ? '#7f58af' : _b, _c = _a.size, size = _c === void 0 ? 80 : _c, className = _a.className, style = _a.style, rest = __rest(_a, [\"color\", \"size\", \"className\", \"style\"]);\n    var circles = __spreadArray([], Array(4)).map(function (_, index) { return _jsx(\"div\", { style: { background: \"\" + color } }, index); });\n    return (_jsx(\"div\", __assign({ className: classNames(styles['lds-ellipsis'], className), style: __assign(__assign({}, style), { width: size, height: size }) }, rest, { children: circles }), void 0));\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}